@model List<SensorValue>
@{
    ViewData["Title"] = "Home Page";
}

<div class="container">
    <div class="section">
        <!--   Icon Section   -->
        <div class="row">
            <div class="col s12 m6">
                <div class="card blue-grey darken-1">
                    <div class="card-content white-text">
                        <span class="card-title">Environment</span>
                        <p>
                            <span class="large">
                                @Model.Single(m => m.RowKey == "InsideTemp").Value.ToString("n1") &deg; F
                            </span>
                        </p>
                        <p>
                            @Model.Single(m => m.RowKey == "InsideHum").Value.ToString("n1") % Humidity
                        </p>
                        <div id="chart_div" data-data-url="@Url.Action("ChartData", "Home", new { sensorName = "InsideTemp" })"></div>

                    </div>
                </div>
            </div>
            <div class="col s12 m6">
                <div class="card blue-grey darken-1">
                    <div class="card-content white-text">
                        <span class="card-title">Power</span>
                        <p>
                            <span class="large">
                                @Model.Single(m => m.RowKey == "PiVolts").Value.ToString("n1") V
                            </span>
                        </p>
                        <p>
                            @Model.Single(m => m.RowKey == "PimWatts").Value.ToString("n1") mW
                        </p>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <br><br>
    <div class="section">
    </div>
</div>


@section scripts {
    <script type="text/javascript">

        // Load the Visualization API and the piechart package.
        google.charts.load('current', { 'packages': ['corechart'] });

        // Set a callback to run when the Google Visualization API is loaded.
        google.charts.setOnLoadCallback(drawChart);

        function drawChart() {
            var chartDiv = $("#chart_div")
            var jsonData = $.ajax({
                url: chartDiv.data("data-url"),
                dataType: "json",
                async: false
            }).responseText;

            // Create our data table out of JSON data loaded from server.
            var data = new google.visualization.DataTable(jsonData);

            // Instantiate and draw our chart, passing in some options.
            var chart = new google.visualization.LineChart(document.getElementById('chart_div'));
            chart.draw(data, { width: 400, height: 240 });
        }

    </script>
}